############################
## Pricing Configuration
 ############################
 
#Job File Name Configuration
storehub.job-file-name=PricingStgDBToFlatFile.xml
 
#Reader Configuration 
xhub.pricingbase.querytimeout=5400
xhub.pricing.querytimeout=5400
	
pricingStgDBToFlatFileJob.pricingPartitioner.table=\
	(select  ORGANIZATION_ID,ORG_CD,ORG_VALUE,stg_pos_process_date,stG_pos_status \
	from xhub_stG_pricing with (nolock) \
	where ORG_VALUE=ORG_VALUE \
	group by ORGANIZATION_ID,ORG_CD,ORG_VALUE,stg_pos_process_date,stG_pos_status) stg_pricing
													
pricingStgDBToFlatFileJob.pricingBasePartitioner.table=\
	(select  ORGANIZATION_ID,ORG_CD,ORG_VALUE,stg_pos_process_date,stG_pos_status \
	from XHUB_STG_BASE_PRICING with (nolock) \
	where ORG_VALUE=ORG_VALUE \
	group by ORGANIZATION_ID,ORG_CD,ORG_VALUE,stg_pos_process_date,stG_pos_status) stg_pricing
														
pricingStgDBToFlatFileJob.pricingBaseDBReader.sql=\
	SELECT TRANSACTION_TYPE,'PRICE_UPDATE_2' AS RECORD_TYPE,ITEM_ID,\
		CASE WHEN MESSAGE_TYPE = 1 THEN 'REGULAR_PRICE' WHEN  MESSAGE_TYPE = 2 THEN 'PROMO_PRICE' ELSE 'REGULAR_PRICE' END AS PROPERTY_CODE,\
		CASE WHEN ORG_VALUE = '*' THEN '*' ELSE 'STORE' END AS LEVEL_CODE,ORG_VALUE,\
		ISNULL(cast(convert(varchar, START_DATETIME, 120) as datetime),\
		cast(convert(varchar, getdate(), 120) as datetime)) START_DATETIME,END_DATETIME,SELLING_UNIT_RETAIL_PRICE,\
		ISNULL(PRICING_QUANTITY,1) PRICING_QUANTITY,EXTERNAL_ID,EXTERNAL_SYSTEM,STG_EVENT_ID,STG_POS_PROCESS_DATE,\
		STG_POS_STATUS \
	FROM XHUB_STG_BASE_PRICING WITH (NOLOCK) \
	where STG_POS_PROCESS_DATE is NULL AND STG_POS_STATUS='0' AND ORGANIZATION_ID=? AND ORG_CD=? AND ORG_VALUE=?
												
pricingStgDBToFlatFileJob.pricingDBReader.sql=\
	select stg_pricing.TRANSACTION_TYPE,'PRICE_UPDATE_2' AS RECORD_TYPE,stg_pricing.ITEM_ID,stg_pricing.PROPERTY_CODE,\
		stg_pricing.LEVEL_CODE,stg_pricing.ORG_VALUE,ISNULL(stg_pricing.START_DATETIME,SYSDATETIME()) START_DATETIME,\
		stg_pricing.END_DATETIME,stg_pricing.SELLING_UNIT_RETAIL_PRICE,ISNULL(stg_pricing.PRICING_QUANTITY,1) PRICING_QUANTITY,\
		stg_pricing.EXTERNAL_ID,stg_pricing.EXTERNAL_SYSTEM,stg_pricing.STG_EVENT_ID \
	from (SELECT TRANSACTION_TYPE,'PRICE_UPDATE_2' AS RECORD_TYPE,ITEM_ID,\
			CASE WHEN MESSAGE_TYPE = 1 THEN 'REGULAR_PRICE' WHEN  MESSAGE_TYPE = 2 THEN 'PROMO_PRICE' ELSE 'REGULAR_PRICE' END AS PROPERTY_CODE,\
			CASE WHEN ORG_VALUE = '*' THEN '*' ELSE 'STORE' END AS LEVEL_CODE,ORG_VALUE,\
			ISNULL(cast(convert(varchar, START_DATETIME, 120) as datetime),cast(convert(varchar, getdate(), 120) as datetime)) START_DATETIME,\
			END_DATETIME,SELLING_UNIT_RETAIL_PRICE,ISNULL(PRICING_QUANTITY,1) PRICING_QUANTITY,EXTERNAL_ID,EXTERNAL_SYSTEM,STG_EVENT_ID,\
			STG_POS_PROCESS_DATE,STG_POS_STATUS \
		 FROM XHUB_STG_PRICING WITH (NOLOCK) \
		 WHERE ORGANIZATION_ID=? AND ORG_CD=? AND ORG_VALUE=?) stg_pricing \
	where stg_pricing.STG_POS_PROCESS_DATE is NULL AND stg_pricing.STG_POS_STATUS='0'

pricingStgDBToFlatFileJob.simPricingReader.sql=\
	SELECT MESSAGE_TYPE, TRANSACTION_TYPE,dbo.retreivestoreid(STORE_ID, ORGANIZATION_ID, SUB_INVENTORY_ID) STORE_ID, \
		ORGANIZATION_ID, SUB_INVENTORY_ID, START_DATETIME, ITEM_ID, EXTERNAL_EVENT_ID, CURRENCY_CODE, NEW_PRICE, SELLING_UOM, \
		SELLING_UNIT_RETAIL_PRICE , STG_EVENT_ID, STG_SIM_STATUS, STG_SIM_ERROR_MESSAGE, STG_LOAD_DATE, STG_SIM_PROCESS_DATE \
	FROM XHUB_STG_PRICING WITH (NOLOCK) \
	WHERE ((STG_SIM_PROCESS_DATE IS NULL AND STG_SIM_STATUS='0') OR (STG_SIM_PROCESS_DATE IS NOT NULL AND STG_SIM_STATUS='2'))
	

# Writer Configuration	
xhub.pricing.fileprefix=pricing


# Dao Class Configuration
pricingStgDBToFlatFileJob.xhubPricingDao.class=com.skillnet.retail.xhub.dao.mssql.PricingMssqlImpDao

# Pricing Base
pricingStgDBToFlatFileJob.xhubPricingBaseDao.class=com.skillnet.retail.xhub.dao.mssql.PricingBaseMssqlImpDao

