#############################
## JOB Profile - InvValidDestination - MASTER
#############################

job.profile=InvValidDestination
job.name=InvValidDestinationStgDBtoFile

## error Channel properties

spring.cloud.stream.bindings.error.destination=errorChannel

## Xhub Core references

xhubDatabean=com.skillnet.retail.xhub.databean.InvValidDestinationDatabean
xhubDao=com.skillnet.retail.xhub.dao.mssql.InvValidDestinationMssqlImpDao

processorStrategy.class.name=com.skillnet.storehub.cloud.stream.processor.strategy.BaseProcessorStrategy
#com.skillnet.storehub.cloud.stream.processor.util.InvValidDestinationProcessorStrategy
rowMapper.class.name=com.skillnet.retail.xhub.mapper.ResultSetMapper

xhubXstorePostProcessorListener=com.skillnet.retail.xhub.listener.XStorePostProcessorListener
xhubRelatePostProcessorListener=com.skillnet.retail.xhub.listener.XRelateItemPostProcessorListener
xsimItemPostProcessorListener=com.skillnet.retail.xhub.sim.listener.XhubSimItemPostProcessorListener

xhubErrorListener=com.skillnet.retail.xhub.listener.XStoreErrorListener

## JDBC - polling properties

jdbc.split=true
jdbc.max-rows-per-poll=100
updatePerRow=true
skip-limit=10
chunk-size=10

## JDBC Source configuration

parameterNames=ORGANIZATION_ID,ORG_CD,ORG_VALUE

jdbc.update=UPDATE XHUB_STG_INV_VALID_DESTINATION SET STG_STATUS = CASE WHEN :dest_TYPE = 'XSTORE' THEN 0 ELSE STG_STATUS END
jdbc.query=SELECT ORGANIZATION_ID,ORG_CD,ORG_VALUE,'XSTORE' DEST_SYSTEM,RECORD_COUNT  from (SELECT ORGANIZATION_ID,SOURCE_LOCATION_ID as 'ORG_CD',SOURCE_LOCATION_ID as 'ORG_VALUE',STG_PROCESS_DATE, STG_STATUS ,COUNT(*) AS RECORD_COUNT  FROM XHUB_STG_INV_VALID_DESTINATION WITH (NOLOCK) WHERE ((STG_PROCESS_DATE IS NULL AND STG_STATUS='9')  OR (STG_PROCESS_DATE IS NOT NULL AND STG_STATUS='2')) GROUP BY ORGANIZATION_ID,SOURCE_LOCATION_ID,STG_PROCESS_DATE,STG_STATUS) STG_INV_VALID_DEST

updatesql.processor.xstore= UPDATE XHUB_STG_INV_VALID_DESTINATION SET STG_PROCESS_DATE=CURRENT_TIMESTAMP WHERE STG_EVENT_ID IN (:stgEventId)
selectsql.processor.xstore= SELECT STG_VALID_DESTN.ACTION_CODE,STG_VALID_DESTN.RECORD_TYPE,STG_VALID_DESTN.ORGANIZATION_ID,\
  STG_VALID_DESTN.DOC_TYPE_CODE,STG_VALID_DESTN.DOC_SUBTYPE_CODE,STG_VALID_DESTN.SOURCE_LOCATION_ID,\
  STG_VALID_DESTN.DESTINATION_LOCATION_ID,STG_VALID_DESTN.DESTINATION_TYPE,STG_VALID_DESTN.DESCRIPTION,\
  STG_VALID_DESTN.SORT_ORDER,STG_VALID_DESTN.STG_EVENT_ID \
 from (SELECT ACTION_CODE,RECORD_TYPE,ORGANIZATION_ID,DOC_TYPE_CODE,DOC_SUBTYPE_CODE,SOURCE_LOCATION_ID,\
   DESTINATION_LOCATION_ID,DESTINATION_TYPE,DESCRIPTION,SORT_ORDER,STG_EVENT_ID, STG_PROCESS_DATE, \
   STG_STATUS,STG_RUN_ID \
    FROM XHUB_STG_INV_VALID_DESTINATION VALID_DESTN WITH (NOLOCK) \
    WHERE  ORGANIZATION_ID= :ORGANIZATION_ID AND SOURCE_LOCATION_ID = :ORG_VALUE) STG_VALID_DESTN \
 where STG_PROCESS_DATE IS NULL AND STG_STATUS ='0' ORDER BY STG_EVENT_ID
 
 updatesql.processor.relate=
 selectsql.processor.relate=
 
 updatesql.processor.sim=
 selectsql.processor.sim=
	
## Dozer mapping configurations

outputClassName=com.skillnet.retail.xhub.databean.InvValidDestinationDatabean
dozerMappingFile=mapping/inventory-dozer-mapping.xml
dozerMappingId=inventoryValidDestinationMapping

## processor - properties 

directive.write.file.fileName= 
directive.write.file.fileNamePrefix= InvValidDestination
directive.write.file.fileSizeLimit= 200
directive.write.file.fileHeader = HEADER
directive.write.file.delimiter = ,
directive.write.file.fileUrlPre =Inv_ValidDest
directive.write.file.xstore.fileNameExtension= .mnt
directive.write.file.relate.fileNameExtension= .xml
directive.write.file.nameExpression= headers[\\"file_name\\"]

directive.write.jms.queueConnectionFactory=jms/QueueConnectionFactory
directive.write.jms.queueName=/jms/xa/Q_SIH_DOWNSTREAM
directive.write.jms.destinationName=Q_SIH_DOWNSTREAM
directive.write.jms.upstreamQueueName=/jms/xa/Q_SIH_UPSTREAM
directive.write.jms.upstreamDestinationName=Q_SIH_UPSTREAM

## sink - Configurations

fieldNames=actionCode,recordType,documentTypeCode,documentSubTypeCode,sourceStoreID,destinationType,destinationStoreID,description,sortOrder
#xhub.inbound.job.steps=STORE,RELATE,SIM
xhub.outbound.filedelimiter=^




